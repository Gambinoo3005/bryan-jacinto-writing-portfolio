---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const posts = await getCollection("posts", ({ data }) => !data.draft);
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<BaseLayout
  title={post.data.title}
  description={post.data.description}
  ogImage={post.data.ogImage}
>
  <!-- Hero Section -->
  <section class="post-hero">
    <div class="hero-overlay"></div>
    {post.data.heroImage && (
      <img
        src={post.data.heroImage}
        alt={post.data.title}
        class="hero-image"
        loading="eager"
        fetchpriority="high"
      />
    )}

    <div class="hero-content">
      <div class="hero-inner">
        <h1 class="hero-title">{post.data.title}</h1>

        <!-- Meta Information -->
        <div class="hero-meta">
          <div class="meta-item">
            <svg class="meta-icon" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
            </svg>
            <time datetime={post.data.pubDate.toISOString()}>
              {post.data.pubDate.toLocaleDateString('en-US', {
                month: 'long',
                day: 'numeric',
                year: 'numeric'
              })}
            </time>
          </div>
        </div>

        <!-- Description -->
        <p class="hero-description">{post.data.description}</p>

        <!-- Tags -->
        {post.data.tags && post.data.tags.length > 0 && (
          <div class="hero-tags">
            {post.data.tags.map((tag) => (
              <span class="tag">{tag}</span>
            ))}
          </div>
        )}
      </div>
    </div>
  </section>

  <!-- Article Content -->
  <article class="post-article">
    <div class="article-container">
      <!-- Content -->
      <div class="prose">
        <Content />
      </div>

      <!-- Back to Posts -->
      <div class="article-footer">
        <a href="/posts" class="back-link">
          <svg class="back-icon" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd"/>
          </svg>
          Back to Articles
        </a>
      </div>
    </div>
  </article>

  <style>
    /* Hero Section */
    .post-hero {
      position: relative;
      width: 100%;
      min-height: 400px;
      display: flex;
      align-items: center;
      justify-content: center;
      background: var(--section-bg);
      overflow: visible;
      padding: 2rem 1rem;
      padding-bottom: 4rem;
    }

    .hero-image {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      opacity: 0.15;
      z-index: 0;
    }

    .hero-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        to bottom,
        rgba(0, 0, 0, 0.4) 0%,
        rgba(0, 0, 0, 0.3) 30%,
        rgba(0, 0, 0, 0.1) 60%,
        var(--section-bg) 90%,
        var(--section-bg) 100%
      );
      z-index: 1;
    }

    .dark .hero-overlay {
      background: linear-gradient(
        to bottom,
        transparent 0%,
        transparent 50%,
        var(--section-bg) 90%,
        var(--section-bg) 100%
      );
    }

    .hero-content {
      position: relative;
      z-index: 2;
      width: 100%;
      max-width: 900px;
      margin: 0 auto;
      padding: 2rem 1.5rem;
    }

    .hero-inner {
      text-align: left;
    }

    .hero-title {
      font-size: clamp(2rem, 5vw, 3.5rem);
      font-weight: 800;
      line-height: 1.2;
      margin-bottom: 1.5rem;
      color: var(--color-heading);
      letter-spacing: -0.02em;
    }

    .hero-meta {
      display: flex;
      align-items: center;
      gap: 1rem;
      margin-bottom: 1.5rem;
      font-size: 0.95rem;
      color: var(--color-muted);
    }

    .meta-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .meta-icon {
      width: 1.25rem;
      height: 1.25rem;
      opacity: 0.7;
    }

    .hero-description {
      font-size: 1.125rem;
      line-height: 1.7;
      color: var(--color-muted);
      max-width: 700px;
    }

    .hero-tags {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      margin-top: 1.5rem;
    }

    .tag {
      display: inline-block;
      padding: 0.25rem 0.75rem;
      font-size: 0.875rem;
      font-weight: 500;
      color: var(--color-link);
      background: rgba(59, 130, 246, 0.1);
      border: 1px solid rgba(59, 130, 246, 0.2);
      border-radius: 9999px;
    }

    /* Article Content */
    .post-article {
      position: relative;
      z-index: 10;
      background-color: var(--section-bg);
      padding: 0 1rem 4rem 1rem;
      margin-top: -2rem;
    }

    .article-container {
      max-width: 800px;
      margin: 0 auto;
    }

    /* Prose Styles */
    .prose {
      color: var(--color-text);
      font-size: 1.0625rem;
      line-height: 1.8;
    }

    .prose :global(h2) {
      font-size: 2rem;
      font-weight: 700;
      margin-top: 3rem;
      margin-bottom: 1.5rem;
      color: var(--color-heading);
      letter-spacing: -0.01em;
    }

    .prose :global(h3) {
      font-size: 1.5rem;
      font-weight: 600;
      margin-top: 2.5rem;
      margin-bottom: 1rem;
      color: var(--color-heading);
    }

    .prose :global(p) {
      margin-bottom: 1.5rem;
    }

    .prose :global(a) {
      color: var(--color-link);
      text-decoration: underline;
      transition: opacity 0.2s ease;
    }

    .prose :global(a:hover) {
      opacity: 0.8;
    }

    .prose :global(ul),
    .prose :global(ol) {
      margin-bottom: 1.5rem;
      padding-left: 1.5rem;
    }

    .prose :global(li) {
      margin-bottom: 0.5rem;
    }

    .prose :global(blockquote) {
      margin: 2rem 0;
      padding: 1.5rem;
      border-left: 4px solid var(--color-link);
      background: var(--surface-glass);
      font-style: italic;
      color: var(--color-muted);
    }

    .prose :global(code) {
      padding: 0.2rem 0.4rem;
      background: color-mix(in srgb, var(--surface-glass) 85%, transparent);
      border: 1px solid rgba(148, 163, 184, 0.25);
      border-radius: 0.35rem;
      font-size: 0.9em;
      font-family: 'JetBrains Mono', 'Fira Code', 'Courier New', monospace;
    }

    .prose :global(pre) {
      position: relative;
      margin: 2rem 0;
      padding: 1.5rem;
      background: radial-gradient(circle at top left, rgba(148, 163, 184, 0.18), transparent 65%), color-mix(in srgb, var(--surface-glass) 88%, transparent);
      border: 1px solid rgba(148, 163, 184, 0.35);
      border-radius: 0.9rem;
      max-height: 420px;
      overflow-x: auto;
      overflow-y: auto;
      box-shadow: 0 18px 40px rgba(15, 23, 42, 0.08);
    }

    .prose :global(pre code) {
      display: block;
      padding: 0;
      background: none;
      border: none;
      font-size: 0.92em;
      line-height: 1.65;
      font-family: 'JetBrains Mono', 'Fira Code', 'Courier New', monospace;
    }

    .prose :global(pre::-webkit-scrollbar) {
      width: 10px;
      height: 10px;
    }

    .prose :global(pre::-webkit-scrollbar-thumb) {
      background: rgba(71, 85, 105, 0.35);
      border-radius: 999px;
    }

    .prose :global(pre::-webkit-scrollbar-thumb:hover) {
      background: rgba(30, 64, 175, 0.45);
    }

    .prose :global(img) {
      margin: 2rem 0;
      border-radius: 0.5rem;
      max-width: 100%;
      height: auto;
    }

    /* Article Footer */
    .article-footer {
      margin-top: 4rem;
      padding-top: 2rem;
      border-top: 1px solid var(--color-border);
    }

    .back-link {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.75rem 1.5rem;
      font-size: 0.95rem;
      font-weight: 600;
      color: var(--color-text);
      background: var(--surface-glass);
      border: 1px solid var(--color-border);
      border-radius: 9999px;
      transition: all 0.2s ease;
      text-decoration: none;
    }

    .back-link:hover {
      background: var(--color-link);
      color: white;
      border-color: var(--color-link);
      transform: translateX(-4px);
    }

    .back-icon {
      width: 1.25rem;
      height: 1.25rem;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .post-hero {
        min-height: 350px;
      }

      .hero-content {
        padding: 2rem 1rem;
      }

      .hero-title {
        font-size: 2rem;
      }

      .hero-meta {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
      }

      .post-article {
        padding: 2rem 1rem;
      }

      .prose {
        font-size: 1rem;
      }
    }
  </style>
</BaseLayout>
