---
const nav = [
  { href: "/about", label: "About" },
  { href: "/work", label: "Work" },      // or "Portfolio"
  { href: "/blogs", label: "Blogs" },
  { href: "/dev-log", label: "Dev Log" },
  { href: "/contact", label: "Contact" }
];

// Contact information
const LINKS = {
  linkedin: "https://www.linkedin.com/in/bryan-jacinto-writer/",
  phone: "+639944011975",
  email: "jacintobryan3@gmail.com",
};

const current = Astro.url.pathname;
---
<header class="sticky top-0 z-50 bg-[var(--header-bg)] dark:bg-gradient-to-br dark:from-[var(--header-bg)] dark:via-[var(--header-bg)] dark:to-[color-mix(in_srgb,var(--header-bg)_95%,var(--color-accent)_5%)] py-3 text-[var(--color-text)]">
  <div class="mx-auto max-w-6xl px-4 relative">
    <!-- grid: 1fr (left) | auto (center nav) | 1fr (right) for desktop; flex justify-between for mobile -->
    <div
      class="h-16 flex md:grid md:grid-cols-[1fr_auto_1fr] items-center justify-between
             rounded-2xl bg-[var(--surface-glass-strong)]
             border border-[var(--color-border)]
             shadow-xl shadow-black/5 ring-1 ring-black/5
             px-3 sm:px-5"
    >
      <!-- Left: Home icon -->
      <div class="md:justify-self-start">
        <a href="/" aria-label="Home" class="icon-btn" title="Home">
          <svg viewBox="0 0 24 24" class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
            <path d="M3 10.5L12 3l9 7.5" />
            <path d="M5 10v10h14V10" />
            <path d="M9 20v-6h6v6" />
          </svg>
        </a>
      </div>

      <!-- CENTER: perfectly centered nav -->
      <nav class="hidden md:flex justify-center items-center gap-2 justify-self-center">
        {nav.map((n) => {
          const isActive = current === n.href || (n.href !== "/" && current.startsWith(n.href));
          return (
            <a
              href={n.href}
              class={`nav-link ${isActive ? "nav-link-active" : ""}`}
              aria-current={isActive ? "page" : undefined}
            >
              {n.label}
            </a>
          );
        })}
      </nav>

      <!-- Right: icons + CV + theme + mobile menu button -->
      <div class="flex md:justify-self-end items-center gap-2">
        <!-- Desktop icons -->
        <div class="hidden md:flex items-center gap-2">
          <a href={LINKS.linkedin} target="_blank" rel="noopener" class="icon-btn" aria-label="LinkedIn" title="LinkedIn">
            <svg viewBox="0 0 24 24" class="h-5 w-5" fill="currentColor" aria-hidden="true">
              <path d="M20.447 3H3.553A.553.553 0 0 0 3 3.553v16.894C3 20.95 3.05 21 3.553 21h16.894A.553.553 0 0 0 21 20.447V3.553A.553.553 0 0 0 20.447 3Zm-11.5 15.06H6.258V9.747h2.69V18.06Zm-1.344-9.43a1.56 1.56 0 1 1 0-3.12 1.56 1.56 0 0 1 0 3.12Zm11.503 9.43h-2.69v-4.4c0-1.05-.02-2.4-1.462-2.4-1.466 0-1.69 1.146-1.69 2.324v4.476h-2.69V9.747h2.582v1.142h.036c.359-.68 1.236-1.398 2.544-1.398 2.722 0 3.224 1.792 3.224 4.125v4.444Z" />
            </svg>
          </a>

          <a href={`tel:${LINKS.phone.replace(/\s+/g, "")}`} class="icon-btn" aria-label={`Call ${LINKS.phone}`} title={LINKS.phone}>
            <svg viewBox="0 0 24 24" class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
              <path d="M22 16.92v2a2 2 0 0 1-2.18 2A19.8 19.8 0 0 1 3.08 4.18 2 2 0 0 1 5 2h2a2 2 0 0 1 2 1.72c.12.86.31 1.7.57 2.5a2 2 0 0 1-.45 2.11L8 9a16 16 0 0 0 7 7l.67-1.12a2 2 0 0 1 2.11-.45c.8.26 1.64.45 2.5.57A2 2 0 0 1 22 16.92z"/>
            </svg>
          </a>

          <a href={`mailto:${LINKS.email}`} class="icon-btn" aria-label={`Email ${LINKS.email}`} title={LINKS.email}>
            <svg viewBox="0 0 24 24" class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
              <path d="M4 4h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z"/>
              <path d="m22 6-10 7L2 6"/>
            </svg>
          </a>

          <a href="/Bryan Jacinto - Resume.pdf" download="Bryan-Jacinto-Resume.pdf" class="icon-btn text-[11px] font-bold" aria-label="Download CV" title="Download CV">
            CV
          </a>
        </div>

        <!-- Theme toggle (always visible) -->
        <button id="theme-toggle" aria-label="Switch to dark mode" aria-pressed="false" class="icon-btn" title="Toggle theme">
          <span class="sr-only">Toggle theme</span>
          <span class="relative inline-block h-5 w-5">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor"
                 class="absolute inset-0 h-5 w-5 transform-gpu origin-center transition-all duration-300 ease-out opacity-100 scale-100 rotate-0 dark:opacity-0 dark:scale-50 dark:rotate-180"
                 stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
              <circle cx="12" cy="12" r="4" />
              <path d="M12 2v2M12 20v2M4 12H2M22 12h-2M4.93 4.93l1.41 1.41M17.66 17.66l1.41 1.41M4.93 19.07l1.41-1.41M17.66 6.34l1.41-1.41" />
            </svg>
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor"
                 class="absolute inset-0 h-5 w-5 transform-gpu origin-center transition-all duration-300 ease-out opacity-0 scale-50 -rotate-180 dark:opacity-100 dark:scale-100 dark:rotate-0"
                 stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
              <path d="M21 12.79A9 9 0 1111.21 3a7 7 0 109.79 9.79z" />
            </svg>
          </span>
        </button>

        <!-- Mobile menu button -->
        <button 
          id="mobile-menu-button" 
          class="md:hidden icon-btn" 
          aria-label="Open navigation menu" 
          aria-expanded="false"
          data-menu-button
        >
          <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile panel - Popup overlay -->
    <nav id="mobile-menu" class="md:hidden hidden absolute top-full right-4 left-4 mt-2 max-w-md mx-auto rounded-2xl bg-[var(--card-bg)] backdrop-blur-xl border border-[var(--color-border)] shadow-2xl ring-1 ring-black/5 px-4 py-3 z-50 transition-all duration-200 ease-out opacity-0 scale-95 origin-top">
      <ul class="flex flex-col gap-1">
        {nav.map((n) => {
          const isActive = current === n.href || (n.href !== "/" && current.startsWith(n.href));
          return (
            <li>
              <a href={n.href}
                 class={`block rounded-lg px-3 py-2 text-[13px] font-semibold uppercase tracking-wider transition-colors ${
                   isActive 
                     ? 'text-[var(--color-link)] bg-[var(--surface-glass)]' 
                     : 'text-[var(--color-text)] hover:bg-[var(--surface-glass)]'
                 }`}>
                {n.label}
              </a>
            </li>
          );
        })}

        <!-- Mobile social links and actions -->
        <li class="pt-3 border-t border-[var(--color-border)] mt-2">
          <div class="grid grid-cols-2 gap-2">
            <a href={LINKS.linkedin} target="_blank" rel="noopener" class="flex items-center gap-2 px-3 py-2 rounded-lg text-[13px] font-medium text-[var(--color-text)] hover:bg-[var(--surface-glass)] transition-colors">
              <svg viewBox="0 0 24 24" class="h-4 w-4" fill="currentColor" aria-hidden="true">
                <path d="M20.447 3H3.553A.553.553 0 0 0 3 3.553v16.894C3 20.95 3.05 21 3.553 21h16.894A.553.553 0 0 0 21 20.447V3.553A.553.553 0 0 0 20.447 3Zm-11.5 15.06H6.258V9.747h2.69V18.06Zm-1.344-9.43a1.56 1.56 0 1 1 0-3.12 1.56 1.56 0 0 1 0 3.12Zm11.503 9.43h-2.69v-4.4c0-1.05-.02-2.4-1.462-2.4-1.466 0-1.69 1.146-1.69 2.324v4.476h-2.69V9.747h2.582v1.142h.036c.359-.68 1.236-1.398 2.544-1.398 2.722 0 3.224 1.792 3.224 4.125v4.444Z" />
              </svg>
              LinkedIn
            </a>
            <a href={`tel:${LINKS.phone.replace(/\s+/g, "")}`} class="flex items-center gap-2 px-3 py-2 rounded-lg text-[13px] font-medium text-[var(--color-text)] hover:bg-[var(--surface-glass)] transition-colors">
              <svg viewBox="0 0 24 24" class="h-4 w-4" fill="none" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
                <path d="M22 16.92v2a2 2 0 0 1-2.18 2A19.8 19.8 0 0 1 3.08 4.18 2 2 0 0 1 5 2h2a2 2 0 0 1 2 1.72c.12.86.31 1.7.57 2.5a2 2 0 0 1-.45 2.11L8 9a16 16 0 0 0 7 7l.67-1.12a2 2 0 0 1 2.11-.45c.8.26 1.64.45 2.5.57A2 2 0 0 1 22 16.92z"/>
              </svg>
              Call
            </a>
            <a href={`mailto:${LINKS.email}`} class="flex items-center gap-2 px-3 py-2 rounded-lg text-[13px] font-medium text-[var(--color-text)] hover:bg-[var(--surface-glass)] transition-colors">
              <svg viewBox="0 0 24 24" class="h-4 w-4" fill="none" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
                <path d="M4 4h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z"/>
                <path d="m22 6-10 7L2 6"/>
              </svg>
              Email
            </a>
            <a href="/Bryan Jacinto - Resume.pdf" download="Bryan-Jacinto-Resume.pdf" class="flex items-center gap-2 px-3 py-2 rounded-lg text-[13px] font-medium text-[var(--color-text)] hover:bg-[var(--surface-glass)] transition-colors">
              <svg viewBox="0 0 24 24" class="h-4 w-4" fill="none" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
                <polyline points="14,2 14,8 20,8"/>
                <line x1="16" y1="13" x2="8" y2="13"/>
                <line x1="16" y1="17" x2="8" y2="17"/>
                <polyline points="10,9 9,9 8,9"/>
              </svg>
              Resume
            </a>
          </div>
        </li>
      </ul>
    </nav>
  </div>
</header>

<script>
  /// <reference lib="dom" />

  const btn = document.querySelector("[data-menu-button]");
  const panel = document.getElementById("mobile-menu");
  
  if (btn && panel) {
    btn.addEventListener("click", () => {
      const isHidden = panel.classList.contains("hidden");
      
      if (isHidden) {
        // Show menu with animation - use requestAnimationFrame to avoid forced reflow
        panel.classList.remove("hidden");
        // Use RAF to ensure DOM update before animation
        requestAnimationFrame(() => {
          panel.classList.remove("opacity-0", "scale-95");
          panel.classList.add("opacity-100", "scale-100");
        });
        btn.setAttribute("aria-expanded", "true");
        btn.setAttribute("aria-label", "Close navigation menu");
      } else {
        // Hide menu with animation
        panel.classList.remove("opacity-100", "scale-100");
        panel.classList.add("opacity-0", "scale-95");
        btn.setAttribute("aria-expanded", "false");
        btn.setAttribute("aria-label", "Open navigation menu");
        // Wait for animation to finish before hiding
        setTimeout(() => {
          panel.classList.add("hidden");
        }, 200);
      }
    });
  }

  function syncButtons(isDark: boolean) {
    const label = isDark ? "Switch to light mode" : "Switch to dark mode";
    for (const id of ["theme-toggle", "theme-toggle-mobile"]) {
      const el = document.getElementById(id);
      if (!el) continue;
      el.setAttribute("aria-pressed", isDark ? "true" : "false");
      el.setAttribute("aria-label", label);
    }
  }

  /** @param {boolean} isDark */
  function setTheme(isDark: boolean) {
    const root = document.documentElement;
    
    // Toggle theme instantly for better performance
    root.classList.toggle("dark", isDark);
    
    // Save preference
    try { localStorage.setItem("theme", isDark ? "dark" : "light"); } catch {}
    
    // Update buttons
    syncButtons(isDark);
  }

  function toggleTheme() {
    const root = document.documentElement;
    setTheme(!root.classList.contains("dark"));
  }

  document.getElementById("theme-toggle")?.addEventListener("click", toggleTheme);
  document.getElementById("theme-toggle-mobile")?.addEventListener("click", toggleTheme);

  syncButtons(document.documentElement.classList.contains("dark"));
</script>

